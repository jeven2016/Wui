//todo: navar 不能设置height,会导致flex-direction：column时无法撑开高度

@mixin update-dropdown {
  border: none;

  > .title, > .info {
    color: $white;

    .button {
      color: $white;
      border: none;
    }
  }
  > .menu {
    color: $black;


    > .menu-list {
      > .menu-item {
        text-shadow: none;
      }
    }
  }
}

.navbar {
  @include make-navbar;
  height: $navbar-item-height;

  > .title {
    @include make-flex {
      align-items: center;
      height: 100%;
      color: $navbar-title-color;
      padding: $navbar-title-padding;
      font-weight: map_get($font-weight, 'normal');
    }

    .dropdown, .button-dropdown {
      @include update-dropdown;
    }
  }

  .navbar-switch {
    border-width: 0;
    background: transparent;
    color: #737070;
    font-size: 1.5rem;
    padding: 0.5rem;

    &:focus, &:hover {
    }
  }

  > .list {
    @include make-flex {
      align-items: center;
      flex: 1 1 auto;
      padding: 0 1rem 0 1rem;
    }

    &.align-right {
      justify-content: flex-end;
    }

    &.align-left {
      justify-content: flex-start;
    }

    &.align-center {
      justify-content: center;
    }

    > .item {
      @include make-flex {
        justify-content: center;
        position: $navbar-item-position;
        @include make-navbar-item($navbar-inactive-text-color);
        transition: all 0.2s;
      }

      .dropdown, .button-dropdown {
        @include update-dropdown;
      }

      &.with-bar {
        &.active, &:focus, &:hover {
          //create the bottom border
          &:after {
            @include make-block(absolute) {
              left: 0;
              bottom: 0;
              content: '';
              height: $navbar-simple-item-link-border-height;
              width: $navbar-simple-item-link-border-width;
              background-color: $navbar-simple-item-link-background-colorh;
              transition: all 0.5s;
              animation: change-width-smoothly 0.3s;
            }
          }
        }
      }

      //occupy the whole column
      &.block {
        height: 100%;
      }

      &.with-bg {
        &.active {
          background-color: darken($navbar-background-color, 10%);
        }

        &:focus, &:hover {
          background-color: darken($navbar-background-color, 5%);
        }
      }

      &.active, &:focus, &:hover {
        color: $navbar-item-active-color;
        text-shadow: $navbar-item-active-box-shadown;
      }

    }
  }

  &.expand {
    display: block;

    > .title, > .switch {
      display: inline-block;
    }

    > .list {
      display: block;
    }
  }

  &.fixed {
    @include fixed(1000, false, null);

    &.top {
      top: 0;
    }

    &.bottom {
      bottom: 0;
    }
  }

  &.primary {
    background-color: $navbar-background-color-primary;

    > .title {
      color: $navbar-primary-active-color;
    }

    .navbar-switch {
      color: $navbar-primary-active-color;
      border-color: $navbar-primary-active-color;
    }

    > .list > .item {
      color: $navbar-primary-item-color;

      &.active, &:hover {
        color: $navbar-primary-active-color;
      }

      &.with-bg {
        &.active {
          background-color: lighten($navbar-background-color-primary, 8%);
        }

        &:focus, &:hover {
          background-color: lighten($navbar-background-color-primary, 5%);
        }
      }
    }
  }

}

@include media-query((key:'min-width', value: map-get($bs-layout, 'xs'))) {
  .navbar > .navbar-switch {
    display: none;
  }
}

@include media-query((key:'max-width', value: map-get($bs-layout, 'xs'))) {
  .navbar .list {
    display: none;
  }
  .navbar .navbar-switch {
    @include make-flex;
  }
}