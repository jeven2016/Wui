.navbar {
  @include make-navbar;

  > .title {
    @include make-flex {
      align-items: center;
      line-height: $navbar-item-line-height;
      color: $navbar-title-color;
      padding: $navbar-title-padding;
      font-weight: map_get($font-weight, 'normal');
    }
  }

  > .list {
    @include make-flex {
      align-items: center;
      flex: 1 1 auto;
      padding: 0 1rem 0 1rem;
    }

    &.align-right {
      justify-content: flex-end;
    }

    &.align-left {
      justify-content: flex-start;
    }

    &.align-center {
      justify-content: center;
    }

    > .item {
      @include make-flex {
        justify-content: center;
        position: $navbar-item-position;
        @include make-navbar-item($navbar-inactive-text-color);
        transition: all 0.2s;
      }

      &.with-bar {
        &.active, &:focus, &:hover {
          //create the bottom border
          &:after {
            @include make-block(absolute) {
              left: 0;
              bottom: 0;
              content: '';
              height: $navbar-simple-item-link-border-height;
              width: $navbar-simple-item-link-border-width;
              background-color: $navbar-simple-item-link-background-colorh;
              transition: all 0.5s;
              animation: change-width 0.5s;
            }
          }
        }
      }

      //occupy the whole column
      &.block {
        height: 100%;
      }

      &.with-bg {
        &.active {
          background-color: darken($navbar-background-color, 10%);
        }

        &:focus, &:hover {
          background-color: darken($navbar-background-color, 5%);
        }
      }


      &.switch {
        display: none;
        right: 1rem;

        > .button {
          /* @include border-radius(0);
           font-size: 1.5rem;
           background-color: $light-gray;
           color: darken($gray, 10%);
           padding: 0.25rem;
           margin: 0.25rem 0.25rem;*/
        }
      }

      &.active, &:focus, &:hover {
        color: $navbar-item-active-color;
      }

    }
  }

  &.expand {
    display: block;

    > .title, > .switch {
      display: inline-block;
    }

    > .list {
      display: block;
    }
  }

  &.fixed {
    @include fixed(1000, false, null);

    &.top {
      top: 0;
    }

    &.bottom {
      bottom: 0;
    }
  }

  &.primary {
    background-color: $navbar-background-color-primary;

    > .title {
      color: $navbar-primary-active-color;
    }

    > .list > .item {
      color: $navbar-primary-item-color;

      &.active, &:hover {
        color: $navbar-primary-active-color;
      }

      &.with-bg {
        &.active {
          background-color: lighten($navbar-background-color-primary, 8%);
        }

        &:focus, &:hover {
          background-color: lighten($navbar-background-color-primary, 5%);
        }
      }
    }
  }

}

@include media-query((key:'min-width', value: map-get($bs-layout, 'xs'))) {
  .navbar > .switch {
    display: none;
  }
}

@include media-query((key:'max-width', value: map-get($bs-layout, 'xs'))) {
  .navbar > .list {
    display: none;
  }
  .navbar > .switch {
    @include make-flex;
  }
}

@keyframes change-width {
  from {
    width: 0;
  }
  to {
    width: 100%
  }
}