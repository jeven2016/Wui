@mixin add-simple-button-content($btn-bg-color, $btn-color, $btn-bdr-color,  $btn-boxshadow-color) {
  @include generate-local($btn-bg-color, $btn-color, $btn-bdr-color);
  @include generate-active($btn-bg-color, $btn-color, $btn-bdr-color, $btn-boxshadow-color);

  &.inverted {
    border: 1px solid transparent;
  }
}

@mixin add-simple-invented-button($btn-bg-color, $btn-color, $btn-bdr-color,  $btn-boxshadow-color,
   $active-btn-bg-color, $active-btn-color, $active-btn-bdr-color,  $active-btn-boxshadow-color) {
  @include generate-local($btn-bg-color, $btn-color, $btn-bdr-color);
  @include generate-active($active-btn-bg-color, $active-btn-color, $active-btn-bdr-color, $active-btn-boxshadow-color);
}

@mixin generate-local($bg-color,$color,$bdr-color, $has-box-shadow: false) {

  &.with-bg {
    background: $bg-color;
  }

  &.with-default-color {
    color: $btn-default-text-color;
    border: $default-border;
  }

  &:not(.with-default-color) {
    color: $color;
    border: $default-border-width solid $bdr-color;

    @if $has-box-shadow {
      box-shadow: 0 0 0 1px $bdr-color inset; //using box-shadow to replace the border
      //border: none;
    }
  }
}

@mixin generate-active($active-bg-color,$btn-text-color,$active-bdr-color, $btn-boxshadow-color) {

  //once the button is disabled, focus and active won't be triggered, only hover needs to be handled
  &:focus, &:hover {
    &:not(:disabled) {
      &.with-bg {
        background: darken($active-bg-color, $default-bg-color-increase-ratio);
      }

      color: $btn-text-color;
      border: $default-border-width solid $active-bdr-color;
      @if $btn-boxshadow-color {
        box-shadow: 0 0 0 0.2rem $btn-boxshadow-color;
      }
      z-index: map_get($z-index, "widget");
    }
  }


  &:active:not(:disabled) {
    &.with-bg {
      background: darken($active-bg-color, $default-bg-color-increase-ratio-active);
    }

    border: $default-border-width solid $active-bdr-color;
  }

  &.active:not(:disabled) {
    color: $btn-text-color;
    background: lighten($active-bg-color, $default-bg-color-increase-ratio);
    border: $default-border-width solid $active-bdr-color;
  }
}

/**
* set the group's border radius property
 */
@mixin group-border-radius($dr-radius:0) {
  &:not(:first-child) {
    @include border-radius-variable(top, left, 0);
    @include border-radius-variable(bottom, left, 0);
  }

  &:not(:last-child) {
    @include border-radius-variable(top, right, 0);
    @include border-radius-variable(bottom, right, 0);
  }
}

@mixin first-button {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  border-right-width: 1px !important;
}

@mixin last-button {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  border-left-width: 0;
}

@mixin middle-button {
  border-radius: 0;
  border-right-width: 1px !important;
  border-left-width: 0;
}
