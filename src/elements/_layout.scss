//Only four column types defined here to ensure our grid system is compatible with bootstrap.
$types: ('sm', 'md', 'lg', 'xl');

// The grid system definition.
// it separates one row into 12 columns in order to meet some special requirements. if you prefer 12 or 16 columns grid system,
// you can change the value of $grid-column-count, and you can get what you want.
.row {
  @include make-flex {
    flex-wrap: wrap;
    flex-grow: 1;
  }

  @include justify;

  > [class^=col-] {
    @include make-block {
      padding: $grid-column-padding;
      width: 100%;
    }
  }

  //generate for xs
  @include generate-grid-columns($grid-column-count, '-');

  //generate for others
  @each $col-type in $types {
    //once the screen width exceeds a specified value, apply the corresponding classes by checking min-width and media query
    @include generate-media-grid-columns($grid-column-count,
            "-"+$col-type+"-", (key:'min-width', value: map-get($bs-layout, $col-type)));

  }

  @for $i from 1 through $grid-column-count {
    .order-#{$i} {
      order: $i;
    }
  }
}

.layout {
  height: 100%;
}

.layout, .layout-content, .layout-footer {
  @include make-flex {
    flex-direction: column;
    flex: auto;
  }

  > .layout-header {
    > .navbar, > .menu {
      border-radius: 0;
    }
  }
}

.layout-footer {
  @include make-flex {
    align-items: center;
    justify-content: center;
    color: $gray-darker;
    font-size: 0.8em;
    flex: 0 1 3rem;
  }
}

.layout-header, .layout-footer {
  &.fixed {
    @include fixed(map_get($z-index, 'mask'), false);

    &.top {
      top: 0;
    }

    &.bottom {
      bottom: 0;
    }
  }
}

.layout-split {
  @include make-flex {
    flex-direction: row;
    flex: auto;
  }
}

.layout-slider {
  @include make-flex {
    height: 100%;
    width: 20%;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;
  }

  .menu {
    border-radius: 0;
  }
}