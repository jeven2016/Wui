//todo: navar 不能设置height,会导致flex-direction：column时无法撑开高度

@mixin update-dropdown {
  border: none;

  > .title, > .info {
    color: $white;

    .button {
      color: $white;
      border: none;
    }
  }
  > .menu {
    color: $black;

    > .menu-list {
      > .menu-item {
        //text-shadow: none;
      }
    }
  }
}

.navbar {
  @include make-navbar;
  flex-wrap: wrap;
  line-height: $navbar-item-height;
  color: $navbar-title-color;
  padding: 0 1rem;

  .switch-btn{

  }

  &.with-box {
    box-shadow: $default-box-shadow;
  }

  &.with-border {
    border: $default-border;
  }

  > .left-bar {
    display: flex;

    > .title {
      @include make-flex {
        align-items: center;
        color: inherit;
        padding: $navbar-title-padding;
        font-weight: map_get($font-weight, 'bold');
        font-size: 1.25rem;
      }
    }
  }

  .navbar-switch {
    border-width: 0;
    background: transparent;
    font-size: 1.5rem;
    //padding: 0.5rem;

    &:focus, &:hover {
      box-shadow: $navbar-switch-box-shadow;
    }

    &:first-child {
      margin-right: .5rem;
    }

    &:last-child {
      margin-left: .5rem;
    }
  }

  > .list {
    @include make-flex {
      align-items: center;
      flex: 1 1 auto;
    }

    &.align-right {
      justify-content: flex-end;
    }

    &.align-left {
      justify-content: flex-start;
    }

    &.align-center {
      justify-content: center;
    }
  }

  .navbar-item {
    @include make-flex {
      @include make-flex-center;
      position: $navbar-item-position;
      @include make-navbar-item($navbar-inactive-text-color);
      transition: all 0.2s;
      height: 100%;
    }

    .dropdown, .button-dropdown {
      //@include update-dropdown;
    }

    &.with-bar {
      &.active, &:focus, &:hover {
        //create the bottom border
        &:after {
          @include make-block(absolute) {
            left: 0;
            bottom: 0;
            content: '';
            border-radius: 20%;
            height: $navbar-simple-item-link-border-height;
            width: $navbar-simple-item-link-border-width;
            background-color: $navbar-simple-item-link-background-colorh;
            transition: all 0.5s;
            animation: change-width-smoothly 0.3s;
          }
        }
      }
    }

    &.with-bg {
      &.active {
        background: darken($navbar-background-color, 5%);
      }

      &:focus, &:hover {
        background: darken($navbar-background-color, 3%);
      }
    }

    &.active, &:focus, &:hover {
      color: $navbar-item-active-color;
      //text-shadow: $navbar-item-active-box-shadown;
    }

  }


  &.auto-hide.expand {
    > .list {
      display: flex;
      transition: all 0.2s ease-in-out;
    }
  }

  &.fixed {
    @include fixed(map_get($z-index, 'mask'), false, null);
    border-radius: 0;

    &.top {
      top: 0;

      > .list {
        //padding-bottom: 1rem;
      }
    }

    &.bottom {
      bottom: 0;

      > .left-bar {
        order: 2;
      }


      > .list {
        order: 1;
        //padding-top: 1rem;
      }
    }
  }

  &.primary {
    background-color: $navbar-background-color-primary;
    color: $navbar-primary-active-color;

    .input {
      background: rgba(255, 255, 255, 0.2);
      color: $white;

      @include make-placeholder {
        color: $white;
      }
    }


    .navbar-switch {
      color: $navbar-primary-active-color;
      border-color: $navbar-primary-active-color;

      &:focus, &:hover {
        box-shadow: $navbar-primary-switch-box-shadow;
      }
    }

    .navbar-item {
      color: $navbar-primary-item-color;

      &.active, &:hover {
        color: $navbar-primary-active-color;
      }

      &.with-bg {
        &.active {
          background-color: lighten($navbar-background-color-primary, 8%);
        }

        &:focus, &:hover {
          background-color: lighten($navbar-background-color-primary, 5%);
        }
      }
    }
  }

}

@include media-query((key:'min-width', value: map-get($bs-layout, 'md'))) {
  .navbar.auto-hide {
    .navbar-switch {
      display: none;
    }

    flex-direction: row;

    > .list {
      display: flex;
      flex-direction: row;
    }
  }
}

//change the list in column style
@include media-query((key:'max-width', value: map-get($bs-layout, 'md'))) {
  &.navbar.auto-hide {
    flex-direction: column;

    .navbar-switch {
      display: inline-flex;
    }

    > .list {
      display: none;
      flex-direction: column;
      align-items: flex-start;
    }

    .navbar-item {
      justify-content: flex-start;
      align-items: center;
      width: 100%;
      padding-left: 1.5rem;
      line-height: $navbar-item-height - 1rem;
    }
  }
}