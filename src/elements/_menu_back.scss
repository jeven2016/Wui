@mixin bottom-bar() {
  &:after {
    @include make-block(absolute) {
      border-radius: 50%;
      left: $menu-float-submenu-active-menu-header-after-left;
      top: $menu-float-submenu-active-menu-header-after-top;
      content: $menu-float-submenu-active-menu-header-after-content;
      height: $menu-float-submenu-active-menu-header-after-height;
      width: $menu-float-submenu-active-menu-header-after-width;
      background-color: $menu-float-submenu-active-menu-header-after-background-color;
      transition: $menu-float-submenu-active-menu-header-after-transition;
      animation: $menu-float-submenu-active-menu-header-after-animation;
    }
  }
}

.submenu {
  @include border-radius($menu-border-radius);
  @include make-flex;
  list-style: $menu-list-style;
  flex-direction: $menu-flex-direction;
  align-items: $menu-align-items;
  position: $menu-position;

  &.with-box {
    box-shadow: $default-box-shadow;
  }

  &.close {
    > .menu-header:after {
      transform: $menu-close-menu-header-icon-transform;
      transform-origin: $menu-close-menu-header-icon-transform-origin;
    }

    > .menu-list {
      max-height: 0;
      overflow: $menu-menu-list-overflow;
    }
  }

  &.show {
    > .menu-list {
      max-height: $menu-menu-list-max-height;
    }
  }

  > .menu-list {
    transition: $menu-menu-list-transition;
    background: $menu-menu-list-background;
    max-height: $menu-menu-list-max-height;

    > .menu-item {
      @include make-menu-item;

      > .left, > .right {
        flex: 0 1 1em;
        @include make-flex-center;
      }

      > .center {
        flex: 1 0 auto;
        padding: 0 0.25rem;
      }

      /*
            > .icon {
              @include child-margin($menu-icon-margin-right);
            }*/
    }
  }

  .menu-header {
    cursor: $menu-item-cursor;
    padding: $menu-header-padding;
    font-weight: map_get($font-weight, 'normal');
    position: $menu-header-position;

    > .icon {
      @include child-margin($menu-icon-margin-right);
    }

    @include add-disabled-conf(false) {
      color: $text-color;
      background-color: transparent;
    }
  }

  //add a arrow icon for non-float menu
  &:not(.float) {
    .menu-header {
      @include make-arrow($default-arrow-border, $default-arrow-active-border, null, 'after', map_get($arrow-direction, 'down')) {
        position: $menu-header-arrow-position;
        right: $menu-header-arrow-right;
        top: $menu-header-arrow-top;
      }
    }
  }

  &.block {
    display: $menu-block-display;
    width: 100%;
  }
}

.menu {
  @extend .submenu;
  @include make-inline-flex;

  &.with-border {
    border: $menu-border;
  }

  /**
  当menu中的嵌套不确定时,如何设置border-radius将会会相当地复杂，
  通常的做法就是menu上下留白，不在子item中设置border-radius,如此可以极大地简化实现难度
   */
  padding: $menu-padding;


  &.simple {

    > .divider {
      display: none;
    }
  }


  &.float {
    flex-direction: $menu-float-flex-direction;
    padding: $menu-float-padding;

    // set border-radius for the first & last child
    //only two types supported
    //1.  menu > menu-list > menu-item , .....
    //2. menu > submenu > menu-header
    //                  > menu-list > menu-item ......


    > .submenu {

      .menu-header {
        flex: $menu-float-submenu-menu-header-flex;
        align-items: $menu-float-submenu-menu-header-align-items;
        flex-direction: $menu-float-submenu-menu-header-flex-direction;
        transition: $menu-float-submenu-menu-header-transition;

        //remove arrow
        &:after {
          content: $menu-float-submenu-menu-header-after-content;
          border: $menu-float-submenu-menu-header-after-border;
        }
      }

      > .menu-list {
        display: $menu-float-submenu-menu-list-display;
        flex-direction: $menu-float-submenu-menu-list-flex-direction;
        position: $menu-float-submenu-menu-position;
        z-index: $menu-float-submenu-menu-z-index;
        left: $menu-float-submenu-menu-left;
        top: $menu-float-submenu-menu-top;
        background-color: $menu-float-submenu-menu-background-color;
        box-shadow: $menu-float-submenu-menu-box-shadow;
      }

      &.show {

        //create the bottom border
        > .menu-header {
          @include bottom-bar;
          color: $blue;
        }

        > .menu-list {
          display: $menu-float-submenu-active-menu-list-display;
          animation: $menu-float-submenu-active-menu-list-animation;
        }

        //when: float & direction=horizontal, direct submenu-> menu-list {left: 0, top: 2.6XXXrem}
        //when: float & direction=vertical , direct submenu-> menu-list {left: 100%, top: 0}
        /* &.direct {
           &.vertical {

           }
         }*/
      }
    }

    //float direction
    &.vertical {
      flex-direction: column;

      .submenu {
        &.direct {
          > .menu-list {
            left: calc(100% + 5px);
            top: 0;
          }
        }

        &.non-direct {
          > .menu-list {
            left: calc(100% + 5px);
            top: 0;
            display: $menu-float-submenu-menu-list-display;
            flex-direction: $menu-float-submenu-menu-list-flex-direction;
            position: $menu-float-submenu-menu-position;
            z-index: $menu-float-submenu-menu-z-index;
            background-color: $menu-float-submenu-menu-background-color;
            box-shadow: $menu-float-submenu-menu-box-shadow;
          }
        }

        &.show {
          > .menu-list {
            display: block;
            animation: $menu-float-submenu-active-vertical-menu-list-animation;
          }
        }

      }
    }

    > .menu-list {
      @include make-flex ;
      flex: $menu-float-menu-list-flex;
      border-radius: $menu-float-menu-list-border-radius;

      > .menu-item {
        min-width: $menu-float-menu-item-mix-width;

        &:first-child {
          border-top-left-radius: $menu-float-menu-item-child-border-radius;
          border-bottom-left-radius: $menu-float-menu-item-child-border-radius;
        }

        &:last-child {
          border-top-right-radius: $menu-float-menu-item-child-border-radius;
          border-bottom-right-radius: $menu-float-menu-item-child-border-radius;
        }

        &.right {
          flex-grow: $menu-float-menu-item-right-flex-grow;
          text-align: $menu-float-menu-item-right-text-align;
          justify-content: $menu-float-menu-item-right-justify-content;
        }

        &.left {
          flex-grow: $menu-float-menu-item-left-flex-grow;
        }
      }
    }

    > .divider {
      display: $menu-float-divider-display;

      & + .menu-list > .menu-item {
        border-left: $menu-float-divider-menu-item-border-left;
      }
    }
  }

  &.primary {
    .menu-list > .menu-item {

      @include focus2 {
        color: $menu-primary-menu-item-focus-color;
      }

      &.active {
        background-color: $menu-primary-menu-item-active-background-color;
        border-right: $menu-primary-menu-item-active-border-right;
        margin-right: $menu-primary-menu-item-active-margin-right;
      }
    }
  }

  &.dark, &.dark .submenu {
    background-color: $menu-dark-background-color;
    color: $menu-dark-color;
    border: $menu-dark-border;

    > .menu-list {
      background-color: $menu-dark-menu-list-background;
    }


    .menu-header {
      background-color: $menu-dark-menu-header-background-color;
      color: $menu-dark-menu-header-color;
      transition: $menu-dark-menu-header-transition;


    }

    > .menu-list > .menu-item {
      &.disabled {
        color: $menu-dark-disabled-menu-item-color;
      }

      &:not(.disabled):focus, &:not(.disabled):hover {
        color: $white;
        text-shadow: $menu-item-hover-text-shadow;
      }

      &.active {
        background-color: $blue;
        color: $white;
        text-shadow: $menu-item-hover-text-shadow;
      }
    }
  }
}