html {
  line-height: 1.15;
  font-family: sans-serif;
  -webkit-tap-highlight-color: transparent;
  -webkit-text-size-adjust: 100%;
}

body {
  font: 1rem/1.5 -apple-system, BlinkMacSystemFont, 'Segoe UI', "Helvetica Neue", Helvetica, Arial, "PingFang SC", "Hiragino Sans GB", "Heiti SC", "Microsoft YaHei", "WenQuanYi Micro Hei", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  color: $text-color;
  background-color: $body-background-color;

  text-rendering: optimizeLegibility;

  //for  anti-aliasing
  font-smooth: antialiased;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

ul {
  margin: 0;
  padding: 0;
}

*, *::after, *::before {
  box-sizing: border-box;
}

a {
  color: inherit;
  text-decoration: $link-text-decoration;
  cursor: $link-cursor;
}

.svg {
  display: inline-block;
  fill: currentColor;
  width: 1em;
  height: 1em;
  line-height: 1;
  flex-shrink: 0;
  user-select: none;
  font-size: 1.5rem;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: 'liga';

  &.larg {
    font-size: 1.5rem;
  }
}

//todo:Deprecated
%inline-block-style {
  position: relative;
  display: inline-block;
}

.mask {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  z-index: map_get($z-index, 'mask');
  overflow: hidden;

  &.dark {
    background: rgba(0, 0, 0, .7);
  }
}


.pull-left {
  float: left !important;
  margin-right: auto; //for flexbox alignment
}

.pull-right {
  float: right !important;
  margin-left: auto; //for flexbox alignment
}

.pull-center {
  margin: auto;
  text-align: center;
  vertical-align: middle;
}

.clear-radius {
  border-radius: 0 !important;
}

.global-with-border {
  border: $menu-border;
}

.global-with-box {
  box-shadow: $default-box-shadow;
}

.with-box {
  box-shadow: $default-box-shadow;
}

.clear-fix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

.clear-border {
  border-width: 0 !important;
}

.clear-min-width {
  min-width: 0 !important;
}

.hide {
  display: none;
}


@include adapter-width('min-width', map-get($bs-layout, 'sm')) {
  .width-sm {
    max-width: $dialog-content-width-sm;
  }

  .width-md {
    max-width: $dialog-content-width-md;
  }

  .width-lg {
    max-width: $dialog-content-width-lg;
  }

  .width-xl {
    max-width: $dialog-content-width-xg;
  }
}

.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: keep-all;
  overflow-wrap: break-word;
}