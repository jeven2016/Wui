.text-field {
  @include make-inline-flex {
    position: relative;
    flex-direction: column;
    transition: border-color .15s;
  }

  &.block {
    @include make-flex
  }

  > .tf-label {
    position: absolute;
    z-index: map_get($z-index, 'one');
  }

  .tf-input {
    padding: 0 1rem;
    border: none;
    height: 100%;
    width: 100%;
    outline: $input-outline;
    line-height: $input-line-height;
    -webkit-appearance: none;
    transition: $default-transition;
    background: transparent;
    font-size: map-get($font-size, 'normal');
  }

  .tf-input-wrapper {
    @include make-flex {
      height: 100%;
      align-items: center;
    }

    .tf-input {
      height: 100%;
      flex: 1 1 auto;
      padding: 0;
      font-size: inherit;
    }

    .tf-col.right {
      padding: 0 0 0 .25rem;
    }

    .tf-col.left {
      padding: 0 .25rem 0 0;
    }
  }

  @include add-disabled-conf(true) {
    > .tf-label {
      color: $text-comment-color;
    }
    > .tf-input {
      @include add-disabled-conf;
    }
  }
}

.text-field.outline {
  height: 3rem;
  border: 1px solid;
  border-radius: $default-border-radius;
  border-color: $gray;


  > .tf-label {
    position: absolute;
    color: $text-comment-color;
    top: 50%;
    transform: translate3d(1rem, -50%, 0);
  }

  > .tf-input-wrapper {
    padding: 0 1rem;
  }

  &.show {
    > .tf-label {
      font-size: .75rem;
      top: 0;
      padding: 0 .25rem;
      background: $white;

      //won't be applied in react project
      transform: translate3d(0.75rem, -50%, 0);
    }

    &.focused {
      border-color: $blue;
      border-width: 2px;

      > .tf-label {
        color: $blue;
      }
    }
  }

  &.small {
    height: 2.5rem;

    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'normal');
    }
  }

  &.large {
    height: 4rem;

    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'xlarge');
    }

    &.show > .tf-label {
      font-size: map-get($font-size, 'normal');
    }
  }
}

.text-field.underline {
  border: none;

  > .tf-label {
    left: 0;
    bottom: 0;
    transform: translate3d(0, -0.25rem, 0);

    + .tf-input, + .tf-input-wrapper {
      margin-top: 1rem;
    }
  }

  > .tf-input, > .tf-input-wrapper {
    //width: 100%;
    padding: 0.25rem 0;
    border-bottom: 1px solid $gray;
  }

  &.show {
    > .tf-label {
      font-size: .75rem;
      top: 0;

      //won't be applied in react project
      transform: translate3d(0, 0, 0);
    }

    &.focused {
      &.with-bottom-bar {
        @include simple-bottom-bar;
      }

      > .tf-label {
        color: $blue;
      }
    }
  }

  &.small {
    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'normal');
    }
  }

  &.large {
    > .tf-input, > .tf-input-wrapper {
      font-size: map-get($font-size, 'xlarge');
    }

    &.show > .tf-label {
      font-size: map-get($font-size, 'small');
    }
  }
}