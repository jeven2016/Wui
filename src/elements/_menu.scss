@mixin bottom-bar() {
  &:after {
    @include make-block(absolute) {
      border-radius: 50%;
      left: $menu-float-submenu-active-menu-header-after-left;
      top: $menu-float-submenu-active-menu-header-after-top;
      content: $menu-float-submenu-active-menu-header-after-content;
      height: $menu-float-submenu-active-menu-header-after-height;
      width: $menu-float-submenu-active-menu-header-after-width;
      background-color: $menu-float-submenu-active-menu-header-after-background-color;
      transition: $menu-float-submenu-active-menu-header-after-transition;
      animation: $menu-float-submenu-active-menu-header-after-animation;
    }
  }
}

@mixin popup-list {

  > .menu-list {
    border-radius: $default-border-radius;
    background: $white;
    z-index: $menu-float-submenu-menu-z-index;
    flex-direction: $menu-float-submenu-menu-list-flex-direction;
    //max-height: 0;
    position: absolute;
    left: calc(100% + 5px);
    top: 0;
  }

  &.show {
    > .menu-list {
      //overflow: visible; //to show submenus correctly
      //max-height: $menu-menu-list-max-height;
      animation: $menu-float-submenu-active-vertical-menu-list-animation;
    }
  }

  &.close {
    > .menu-list {
      animation: $menu-float-submenu-close-vertical-menu-list-animation;
    }
  }
}

.submenu {
  @include border-radius($menu-border-radius);
  @include make-flex;
  list-style: $menu-list-style;
  flex-direction: $menu-flex-direction;
  align-items: $menu-align-items;
  position: $menu-position;


  > .menu-list {
    transition: $menu-menu-list-transition;
    //background: $menu-menu-list-background;

    > .menu-item {
      @include make-menu-item;

      > .left, > .right {
        flex: 0 1 1em;
        @include make-flex-center;
      }

      > .center {
        flex: 1 0 auto;
        padding: 0 0.25rem;
      }
    }

    @include justify;
  }

  .menu-header {
    cursor: $menu-item-cursor;
    padding: $menu-header-padding;
    font-weight: map_get($font-weight, 'normal');
    position: $menu-header-position;
    @include make-flex;

    @include add-disabled-conf(false) {
      color: $text-color;
      background-color: transparent;
    }

    > .icon {
      margin-right: 1rem;
    }

    &.with-arrow {
      @include make-arrow($default-arrow-border, $default-arrow-active-border, null, 'after', map_get($arrow-direction, 'down')) {
        position: $menu-header-arrow-position;
        right: $menu-header-arrow-right;
        top: $menu-header-arrow-top;
      }
    }
  }

  &.block {
    width: 100%;

    > .menu-list {
      width: 100%;
    }
  }

  &.normal {
    > .menu-list {
      transition: $menu-menu-list-transition;
    }

    &.show {
      > .menu-list {
        max-height: $menu-menu-list-max-height;
      }
    }

    &.close {
      > .menu-list {
        max-height: 0;
        overflow: hidden;
      }

      > .menu-header:after {
        transform: rotate(90deg);
        transition: transform .2s;
      }
    }
  }

}

.menu {
  @extend .submenu;
  @include make-inline-flex;

  /**
  当menu中的嵌套不确定时,如何设置border-radius将会会相当地复杂，
  通常的做法就是menu上下留白，不在子item中设置border-radius,如此可以极大地简化实现难度
   */
  padding: $menu-padding;

  //add a arrow icon for non-float menu
  &:not(.menu-row):not(.popup-menu) {
    .menu-header {
      @include make-arrow($default-arrow-border, $default-arrow-active-border, null, 'after', map_get($arrow-direction, 'down')) {
        position: $menu-header-arrow-position;
        right: $menu-header-arrow-right;
        top: $menu-header-arrow-top;
      }
    }
  }

  &.primary {
    .menu-list > .menu-item {

      @include focus2_no_active {
        color: $menu-primary-menu-item-focus-color;
      }

      &.active {
        background-color: $menu-primary-menu-item-active-background-color;
        border-right: $menu-primary-menu-item-active-border-right;
        margin-right: $menu-primary-menu-item-active-margin-right;
      }
    }
  }

  &.dark, &.dark .submenu {
    background-color: $menu-dark-background-color;
    color: $menu-dark-color;
    border: $menu-dark-border;

    > .menu-list {
      background-color: $menu-dark-menu-list-background;
    }

    &.collapse {
      .menu-header {
        background-color: $menu-dark-menu-header-background-color;
        color: $menu-dark-menu-header-color;
        transition: $menu-dark-menu-header-transition;

        @include focus2 {
          box-shadow: $default-primary-box-shadow;
        }
      }
    }

    > .menu-list > .menu-item {
      &.disabled {
        color: $menu-dark-disabled-menu-item-color;
      }

      &:not(.disabled):focus, &:not(.disabled):hover {
        color: $white;
        text-shadow: $menu-item-hover-text-shadow;
      }

      &.active {
        background-color: $blue;
        color: $white;
        text-shadow: $menu-item-hover-text-shadow;
      }
    }
  }

  &.menu-row {
    flex-direction: row;
    //no sub-menu but only menu-list exists
    //float
    > .menu-list {
      display: flex;
      flex-direction: $menu-float-flex-direction;
      position: relative;

      > .menu-item {
        min-width: $menu-float-menu-item-mix-width;

        &:first-child {
          border-top-left-radius: $menu-float-menu-item-child-border-radius;
          border-bottom-left-radius: $menu-float-menu-item-child-border-radius;
        }

        &:last-child {
          border-top-right-radius: $menu-float-menu-item-child-border-radius;
          border-bottom-right-radius: $menu-float-menu-item-child-border-radius;
        }

        &.right {
          flex-grow: $menu-float-menu-item-right-flex-grow;
          text-align: $menu-float-menu-item-right-text-align;
          justify-content: $menu-float-menu-item-right-justify-content;
        }

        &.left {
          flex-grow: $menu-float-menu-item-left-flex-grow;
        }
      }
    }

    > .direct-child {
      > .menu-list {
        border-radius: $default-border-radius;
        background: $white;
        z-index: $menu-float-submenu-menu-z-index;
        flex-direction: $menu-float-submenu-menu-list-flex-direction;
        position: absolute;
        left: 0;
      }

      &.show {
        > .menu-list {
          animation: $menu-float-submenu-active-menu-list-animation;
        }
      }

      &.close {
        > .menu-list {
          animation: $menu-float-submenu-close-menu-list-animation;
        }
      }
    }

    &.popup-menu {
      &.global-with-border {
        .menu-list {
          border: $default-border;
        }
      }

      &.global-with-box {
        .menu-list {
          box-shadow: $default-box-shadow;
        }
      }

      .non-direct-child {
        @include popup-list;
      }


      &.dark {
        .menu-list {
          background: $menu-dark-background-color !important;
        }
      }
    }

  }

  &.menu-column {
    flex-direction: column;

    &.popup-menu {

      //垂直弹出submenu，可以在左侧或右侧显示,默认在右侧
      &.left {
        .submenu {
          > .menu-list {
            right: calc(100% + 5px);
            left: unset;
          }
        }
      }

      &.global-with-border {
        .menu-list {
          border: $default-border;
        }
      }

      &.global-with-box {
        .menu-list {
          box-shadow: $default-box-shadow;
        }
      }


      &.dark {
        .menu-list {
          background: $menu-dark-background-color !important;
        }
      }
    }

    .direct-child, .non-direct-child {
      @include popup-list;
    }
  }
}

%hide-content {
  min-width: unset !important;
  min-height: 3rem;
  align-items: center;
  justify-content: center;
  box-shadow: $default-box-shadow;

  > *:not(.icon) {
    width: 0;
    height: 0;
    opacity: 0;
    transition: all .5s;
  }
}

.popup-menu {
  .menu-item {
    min-width: 8rem;
  }

  &.collapse {
    > .menu-list > .menu-item {
      @extend %hide-content;

      > .icon {
        margin-right: unset;
      }
    }

    > .submenu.direct-child {
      > .menu-header {
        @extend %hide-content;

        > .icon {
          margin-right: unset;
        }
      }
    }
  }
}