@mixin bottom-bar() {
  &:after {
    @include make-block(absolute) {
      border-radius: 50%;
      left: $menu-float-submenu-active-menu-header-after-left;
      top: $menu-float-submenu-active-menu-header-after-top;
      content: $menu-float-submenu-active-menu-header-after-content;
      height: $menu-float-submenu-active-menu-header-after-height;
      width: $menu-float-submenu-active-menu-header-after-width;
      background-color: $menu-float-submenu-active-menu-header-after-background-color;
      transition: $menu-float-submenu-active-menu-header-after-transition;
      animation: $menu-float-submenu-active-menu-header-after-animation;
      z-index: 1;
    }
  }
}

@mixin right-bar() {
  &:after {
    @include make-block(absolute) {
      right: 0;
      top: 0;
      content: $menu-float-submenu-active-menu-header-after-content;
      height: 100%;
      width: 0.1875rem;;
      background-color: $menu-float-submenu-active-menu-header-after-background-color;
      transition: height .3s;
      //animation: $menu-float-submenu-active-menu-header-after-animation;
    }
  }
}

@mixin create-line($prefix) {
  > .#{$prefix}-icon {
    display: flex;
    flex: 0 0 1.5rem;
    height: 1.5rem;
    transform-origin: center;
    @include make-flex-center;

    > .icon {
      color: inherit;
    }
  }

  > .#{$prefix}-info {
    padding: 0 0.5rem;
    transform-origin: left;
    overflow: hidden;
    display: flex;
    flex: 1 1 auto;
  }
}

//normal menu
@mixin make-menu-item2($display-flex:true, $item-padding: $menu-item-padding) {
  @if $display-flex {
    @include make-flex-vertical-center ;
  } @else {
    @include make-inline-flex-center ;
  }
  position: relative;
  line-height: $menu-item-line-height;
  padding: $item-padding;
  //todo: the dropdown list failed to represent this due to the overflow is set for menu-item
  //overflow: $menu-item-overflow;
  //text-overflow: $menu-item-text-overflow;
  white-space: $menu-item-white-space;
  cursor: $menu-item-cursor;
  border: $menu-item-border;
  //min-width: $dp-min-width;
  transition: $menu-item-transition;

  > .icon {
    margin-right: .5rem;
  }

  @include focus-active2 {
    color: $menu-item-hove-text-color;

    &.with-bg {
      background-color: $menu-item-background-color;
    }
  }

  @include active2 {
    &.with-bottom-bar {
      @include bottom-bar;
    }
  }

  @include add-disabled-conf(false) {
    color: $text-color;
    background-color: transparent;
  }

  @content;
}


.base-menu {
  @include make-inline-flex;
  position: $menu-position;
  @include justify;
  display: flex;
  flex: 1 1 auto;

  &.with-border-radius {
    @include border-radius($menu-border-radius);
  }

  &.compact {
    .menu-item {
      min-width: 10rem;
    }
  }

  //two types: the submenu's position will be absolute
  &.menu-row {
    flex-direction: row;
    align-items: $menu-align-items;
  }

  &.menu-column {
    flex-direction: $menu-flex-direction;
  }

  //&.popup-menu

  .menu-item {
    @include make-menu-item2 {
      //white-space:nowrap; overflow:hidden; text-overflow:ellipsis;
      //flex: 1 0 calc(100% - 1rem);
      &.equitable {
        flex-grow: 1;
      }

      > .right {
        flex-grow: 1;
      }

      @include create-line('item');
    }

    &.primary {
      @include focus2_no_active {
        color: $menu-primary-menu-item-focus-color;
      }

      &.active {
        background-color: $menu-primary-menu-item-active-background-color;
        //border-right: $menu-primary-menu-item-active-border-right;
        //margin-right: $menu-primary-menu-item-active-margin-right;
        text-shadow: 0 0 1px lighten($primary, 20%);

        @include right-bar;
      }
    }

    &.dark {
      &.disabled {
        color: $menu-dark-disabled-menu-item-color;
      }

      @include focus2_no_active {
        color: $white;
        text-shadow: $menu-item-hover-text-shadow;
      }

      &.active {
        background-color: $blue;
        color: $white;
        text-shadow: $menu-item-hover-text-shadow;
      }
    }

    > .left, > .right {
      flex: 0 1 1em;
      @include make-flex-center;
    }

    > .center {
      flex: 1 0 auto;
      padding: 0 0.25rem;
    }

    @include justify;
  }


  .menu-header {
    cursor: $menu-item-cursor;
    line-height: $menu-item-line-height;
    font-weight: map_get($font-weight, 'light');
    position: $menu-header-position;
    @include make-flex;
    //width: 100%;
    transform-origin: center;
    transition: transform .3s linear;
    padding: .5rem .5rem .5rem 2rem;
    white-space: nowrap;

    @include add-disabled-conf(false) {
      color: $text-color;
      background-color: transparent;
    }

    &.with-bottom-bar {
      @include focus2 {
        @include bottom-bar;
      }

      &.active-bar {
        @include bottom-bar;
      }
    }


    &.normal {
      @include focus2 {
        color: $primary;
      }

      &.active {
        color: $primary
      }
    }

    &.dark {
      @include focus2 {
        color: lighten($white, 10%);
      }

      &.active {
        color: $white;
        text-shadow: $menu-item-hover-text-shadow;
      }
    }

    > .header-info {
      display: flex;
      flex: 1 1 auto;
      justify-content: flex-start;
    }

    @include create-line('header');

    &.compact {
      padding: 0.5rem 0;
      display: inline-flex;
      justify-content: center;

      &.dark {
        @include focus2 {
          box-shadow: $default-primary-box-shadow;
        }
      }

      > .header-info {

        + .header-icon {
          display: none;
        }
      }
    }

    &.non-compact {
      > .header-info {
        transform-origin: left;
        overflow: hidden;

      }
    }
  }

  .menu-group {
    > .group-header {
      color: #a5b2bb;
    }

  }

  .popup-panel {
    position: absolute;
    left: 100%;
    top: 0;
    box-shadow: $menu-float-submenu-menu-box-shadow;

    &.normal {
      background: $white;
    }

    &.dark {
      background: $menu-dark-background-color;
    }
  }

  .item-list {
    display: flex;
    flex: 1 0 auto;
    flex-direction: column;
    padding: $menu-padding;

    &.popup-list {
      box-shadow: $default-box-shadow;
      position: absolute;
      background: $white;
      @include border-radius;
      z-index: map_get($z-index, 'pop');
      opacity: 0; //initially hidden

      &.dark {
        background: $menu-dark-background-color;
      }

      &.right {
        left: calc(100% + 0.375rem);
        top: 0;

        &:before {
          position: absolute;
          content: '';
          display: flex;
          flex: 1 0 auto;
          left: -.5rem;
          width: 50%;
          height: 50%;
        }
      }

      &.bottom {
        top: calc(100% + 0.375rem);
        left: 0;

        &:before {
          position: absolute;
          content: '';
          display: flex;
          flex: 1 0 auto;
          top: -.5rem;
          width: 100%;
          height: 50%;
        }
      }
    }
  }
}

.menu {
  @extend .base-menu;

  &.dark {
    background-color: $menu-dark-background-color;
    color: $menu-dark-color;
    border: $menu-dark-border;
  }

  /**
     当menu中的嵌套不确定时,如何设置border-radius将会会相当地复杂，
     通常的做法就是menu上下留白，不在子item中设置border-radius,如此可以极大地简化实现难度
   */
  padding: $menu-padding;
  flex-wrap: wrap;
  transition: width .3s;

  &.compact {
    width: 5.5rem;

    > .menu-item {
      min-width: unset;
    }

    > div {
      margin: 0.25rem 0;
    }
  }

  &.non-compact {
    width: 100%;
  }
}