$animation-timeout: .2s;

%close-btn {
  border-width: 0;
  padding: 0;
  opacity: .6;
  background-color: transparent;


  @include only-focus-active {
    opacity: 1;
    transform: scale(1.2, 1.2);
    transform-origin: center;
    background-color: transparent;
    box-shadow: unset;
  }
}

@keyframes active-alert {
  from {
    opacity: 0;
    transform: scaleY(0);
  }
  to {
    opacity: 1;
    transform: scaleY(1);
  }
}

@keyframes inactive-alert {
  from {
    visibility: visible;
    opacity: 1;
    transform: scaleY(1);
  }
  to {
    visibility: hidden;
    opacity: 0;
    transform: scaleY(0);
    height: 0 !important;
  }
}

.alert {
  @include make-flex {
    position: relative;
    flex: 1 0 100%;
    flex-flow: row nowrap;
    padding: 0.5rem 1rem;
    border-radius: $default-border-radius;
    margin-bottom: 0.5rem;
  }

  &.active {
    visibility: visible;
    animation: active-alert $animation-timeout ease-in-out;
  }


  &.inactive {
    animation: inactive-alert $animation-timeout ease-in-out;
    animation-fill-mode: forwards;
  }

  &.normal {
    display: inline-flex;
    min-width: 20rem;
  }

  &.block {
    display: flex;
    flex: 1 1 100%;
  }

  &.with-title {
    > .alert-close {
      align-items: flex-start;
    }
  }

  > .alert-content {
    flex-grow: 1;
    display: flex;
    flex-flow: column wrap;

    > .title {
      font-weight: 500;
    }
  }

  > .alert-icon {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex: 0 0 auto;
    padding-right: 0.75rem;
    font-size: 1.5rem;
  }

  > .alert-close {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    flex: 0 0 auto;

    > .close-btn {
      @extend %close-btn;
    }
  }

  &.alert-info {
    background-color: #d6eaff;
    border: 1px solid darken(#d6eaff, 10%);

    border-left-width: 0.5rem;
    border-top-left-radius: 0.5rem;
    border-bottom-left-radius: 0.5rem;
    border-left-color: $blue;

    > .alert-icon {
      color: $blue;
    }

    &:focus, &:hover {
      box-shadow: 1px 1px 6px 0 darken(#d6eaff, 10%);
    }
  }


  &.alert-simple, &.alert-mini {
    border: 1px solid $default-border-color;
    box-shadow: $default-box-shadow;
    background: $white;

    > .alert-close {
      align-items: flex-start;
    }

    > .alert-icon {
      color: $blue;
    }
  }

  &.alert-simple {
    > .alert-content {
      > .body {
        min-height: 4rem;
      }
    }
  }

  &.alert-ok {
    background-color: darken(#f6ffed, 10%);
    border: 1px solid darken(#36e73c70, 20%);
    border-left-width: 0.5rem;
    border-top-left-radius: 0.5rem;
    border-bottom-left-radius: 0.5rem;
    border-left-color: green;

    > .alert-icon {
      color: $green;
    }

    &:focus, &:hover {
      box-shadow: 1px 1px 6px 0 darken(#36e73c70, 10%);
    }
  }


  &.alert-warning {
    background-color: darken(#fff3cd, 10%);
    border: 1px solid darken(#fff3cd, 30%);

    border-left-width: 0.5rem;
    border-top-left-radius: 0.5rem;
    border-bottom-left-radius: 0.5rem;
    border-left-color: $brown;

    > .alert-icon {
      color: lighten($brown, 10%);
    }

    &:focus, &:hover {
      box-shadow: 1px 1px 6px 0 darken(#fff3cd, 20%);
    }
  }


  &.alert-error {
    background-color: #ffd9d7;
    border: 1px solid #e8818a;

    border-left-width: 0.5rem;
    border-top-left-radius: 0.5rem;
    border-bottom-left-radius: 0.5rem;
    border-left-color: darken(#e8818a, 20%);

    > .alert-icon {
      color: darken(#e8818a, 20%);
    }

    &:focus, &:hover {
      box-shadow: 1px 1px 6px 0 #e8818a;
    }
  }
}

//------------------------------- Container ---------------------------------

$container-offset: 2vw;

@keyframes tl-active-alert {
  from {
    left: calc(-100% + 2vw);
  }
  to {
    left: $container-offset;
  }
}

@keyframes tl-inactive-alert {
  from {
    left: $container-offset;
  }
  to {
    left: calc(-100% + 2vw);
  }
}

@keyframes tr-active-alert {
  from {
    right: calc(-100%);
  }
  to {
    right: 0;
  }
}

@keyframes tr-inactive-alert {
  from {
    right: 0;
  }
  to {
    right: calc(-100%);
  }
}

%r-movement {
  > .alert.active {
    animation: tr-active-alert $animation-timeout linear;
    animation-fill-mode: forwards;
  }

  > .alert.inactive {
    animation: tr-inactive-alert $animation-timeout linear;
    animation-fill-mode: forwards;
  }
}

%l-movement {
  > .alert.active {
    animation: tl-active-alert $animation-timeout linear;
    animation-fill-mode: forwards;
  }

  > .alert.inactive {
    animation: tl-inactive-alert $animation-timeout linear;
    animation-fill-mode: forwards;
  }
}

.alert-container {
  position: fixed;
  display: flex;
  flex-flow: row wrap;
  z-index: map_get($z-index, 'top');
  width: 97%;

  @include adapter-width('min-width', map-get($bs-layout, 'sm')) {
    &.alert-container-width-sm {

      width: 22.5rem;
    }
  }

  &.top-left {
    top: $container-offset;
    left: $container-offset;

    @extend %l-movement;
  }

  &.top-right {
    top: $container-offset;
    right: $container-offset;

    @extend %r-movement;
  }

  &.bottom-left {
    bottom: $container-offset;
    left: $container-offset;

    @extend %l-movement;
  }

  &.bottom-right {
    bottom: $container-offset;
    right: $container-offset;

    @extend %r-movement;
  }

}



