@mixin make-placeholder() {
  &::-webkit-input-placeholder, &::-moz-placeholder, &:-ms-input-placeholder {
    @content
  }
}

@mixin change-border-radius() {
  &:first-child {
    @include full-border-radius($default-border-radius, 0, $default-border-radius, 0);
  }

  &:last-child {
    @include full-border-radius(0, $default-border-radius, 0, $default-border-radius);
  }

  // border: $input-border;

  &:not(:last-child):not(:first-child) {
    @include border-radius(0);
  }
}

@mixin input-group-child() {
  &:last-child {
    &.input, & .input {
      @include border-radius(0 $default-border-radius $default-border-radius 0);
    }

    &:not(.element) {
      border-left-width: $input-border-width;
    }

    @include border-radius(0 $default-border-radius $default-border-radius 0);
  }

  &:first-child {
    &.input, & .input {
      @include border-radius($default-border-radius 0 0 $default-border-radius);
    }

    &:not(.element) {
      border-right-width: 0;
    }

    @include border-radius($default-border-radius 0 0 $default-border-radius);
  }

  &:not(:first-child):not(:last-child) {
    @include border-radius(0);

    &:not(.element) {
      border-right-width: 0;
    }

    &.input, & .input {
      @include border-radius(0);
    }
  }
}

//for input-ok, input-warning, input-error
@mixin make-special-input($type, $color) {
  .input-#{$type} {

    &.input, &.icon-input > .input {
      border-color: $color;
    }

    &.input {
      &:active, &:focus {
        box-shadow: 0 2px 6px 0 rgba($color, 0.24);
      }
    }

    &.icon-input .icon {
      color: $color;
    }

    &.icon-input {
      > .input {
        &:active, &:focus {
          box-shadow: 0 2px 6px 0 rgba($color, 0.24);

          ~ .icon {
            color: $color;
          }
        }
      }
    }
  }
}