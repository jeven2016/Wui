@mixin full-border-radius($top-left:0,$top-right:0,$bottom-left:0,$bottom-right:0) {
  //-webkit-border-radius: $top-left $top-right $bottom-right $bottom-left;
  //-moz-border-radius: $top-left $top-right $bottom-right $bottom-left;
  border-radius: $top-left $top-right $bottom-right $bottom-left;
}

@mixin linear-gradient($arguments...) {
  background: -webkit-linear-gradient($arguments...);
  background: -o-linear-gradient($arguments...);
  background: -moz-linear-gradient($arguments...);
  background: linear-gradient($arguments...);
}

@mixin border-radius($border-radius :$default-border-radius) {
  //-webkit-border-radius: $border-radius;
  //-moz-border-radius: $border-radius;
  border-radius: $border-radius;
}

@mixin fixed($z-Index:1000,$is-block:true, $width: 100%) {
  position: fixed;
  z-index: $z-Index;
  border-left-width: 0;
  border-right-width: 0;
  border-top-width: 0;
  @include border-radius(0);

  @if $is-block {
    display: block;
  }

  @if $width != null {
    width: $width;
  }
}

@mixin make-arrow($border, $bdr-color:$border-default-color) {
  &:after {
    content: '';
    width: 0;
    height: 0;
    margin-left: 0.4rem;
    vertical-align: middle;
    display: inline-block;
    border: $border;
    border-top-color: $bdr-color;
    @content
  }
}

//=================================================================================


@mixin border($border) {
  border: $border;
}

@mixin adapter-width($key,$value) {
  @media ($key: $value) {
    @content
  }
}

//////////////////////////////////////////////////////////////////////////////////////////
%block-level {
  display: block;
  position: relative;
}

//float a element
@mixin float-elem($floatDirection, $margin:null, $padding:null) {
  float: $floatDirection;
  display: inline-block;

  @if $margin != null {
    margin: $margin;
  }

  @if $padding != null {
    padding: $padding;
  }
}

