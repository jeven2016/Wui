@mixin full-border-radius($top-left:0,$top-right:0,$bottom-left:0,$bottom-right:0) {
  //-webkit-border-radius: $top-left $top-right $bottom-right $bottom-left;
  //-moz-border-radius: $top-left $top-right $bottom-right $bottom-left;
  border-radius: $top-left $top-right $bottom-right $bottom-left;
}

@mixin linear-gradient($arguments...) {
  background: -webkit-linear-gradient($arguments...);
  background: -o-linear-gradient($arguments...);
  background: -moz-linear-gradient($arguments...);
  background: linear-gradient($arguments...);
}

@mixin border-radius($border-radius :$default-border-radius) {
  //-webkit-border-radius: $border-radius;
  //-moz-border-radius: $border-radius;
  border-radius: $border-radius;
}

@mixin border-radius-variable($var-y, $var-x,$border-radius) {
  border-#{$var-y}-#{$var-x}-radius: $border-radius;
}

@mixin fixed($z-Index:100,$is-block:true, $width: 100%) {
  position: fixed;
  z-index: $z-Index;
  @include border-radius(0);
  box-shadow: $navbar-fixed-box-shadow;

  @if $is-block {
    display: block;
  }

  @if $width != null {
    width: $width;
  }
}

//the $arrow-direction could be : up down left right;
@mixin make-arrow($border,
              $bdr-color:$border-default-color,
              $margin: 0 0 0 0.2rem,
              $pseudo-class-name: 'after',
              $direction: map_get($arrow-direction, 'bottom')) {
  &:#{$pseudo-class-name} {
    content: '';
    width: 0;
    height: 0;
    margin: $margin;
    vertical-align: middle;
    display: inline-block;
    border: $border;
    transition: transform .4s ease-in-out;

    @if ($direction == map_get($arrow-direction, 'bottom')) {
      border-top-color: $bdr-color;
    }
    @if ($direction == map_get($arrow-direction, 'up')) {
      border-bottom-color: $bdr-color;
    }
    @if ($direction == map_get($arrow-direction, 'left')) {
      border-right-color: $bdr-color;
    }
    @if ($direction == map_get($arrow-direction, 'right')) {
      border-left-color: $bdr-color;
    }

    @content
  }
}

@mixin make-flex() {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  @content;
}

@mixin make-flex-center() {
  @include make-flex {
    align-items: center;
    justify-content: center;
  }
  @content
}

@mixin make-inline-flex() {
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  @content;
}

@mixin flex-grow($value) {
  -webkit-flex-grow: $value;
  flex-grow: $value;
}

//@$condition: format (key:'min-width', value:'xs' )
@mixin media-query($condition) {
  @media screen and (map-get($condition, 'key'): map-get($condition, 'value')) {
    @content
  }
}

//=================================================================================

@mixin border($border) {
  border: $border;
}

@mixin adapter-width($key,$value) {
  @media ($key: $value) {
    @content
  }
}

//////////////////////////////////////////////////////////////////////////////////////////
%block-level {
  display: block;
  position: relative;
}
